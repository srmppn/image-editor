[{"/Users/srmppn/Desktop/umbrella-editor/src/reportWebVitals.js":"1","/Users/srmppn/Desktop/umbrella-editor/src/App.js":"2","/Users/srmppn/Desktop/umbrella-editor/src/index.js":"3"},{"size":362,"mtime":1606287789506,"results":"4","hashOfConfig":"5"},{"size":5072,"mtime":1606317191179,"results":"6","hashOfConfig":"5"},{"size":547,"mtime":1606317177682,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aib4nd",{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/srmppn/Desktop/umbrella-editor/src/reportWebVitals.js",[],"/Users/srmppn/Desktop/umbrella-editor/src/App.js",["15","16","17"],"import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport 'tui-image-editor/dist/tui-image-editor.css';\nimport { Button } from 'react-bootstrap';\nimport { fabric } from 'fabric';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      canvas: null,\n      hueSet: false,\n      hueValue: 0,\n      rgbSet: false,\n      r: 0,\n      g: 0,\n      b: 0,\n      hasSelect: false\n    }\n  }\n\n  componentDidMount = () => {\n    var canvas = new fabric.Canvas('canvas', {\n      width: '600',\n      height: '600',\n      backgroundColor: 'lightgray'\n    })\n    canvas.on('selection:created', (param) => {\n      const filter = param.selected[0].filters\n      if(typeof filter[0] !== \"undefined\"){\n        this.setState({hueSet: filter[0].isSet, hueValue: filter[0].rotation})\n      }\n      if(typeof filter[1] !== \"undefined\"){\n        this.setState({rgbSet: filter[1].isSet, r: filter[1].gamma[0], g: filter[1].gamma[1], b: filter[1].gamma[2]})\n      }\n      this.setState({hasSelect: true})\n    })\n    canvas.on('selection:cleared', (parama) => {\n      this.setState({hasSelect: false})\n    })\n    canvas.renderAll();\n    this.setState({canvas: canvas});\n    window.onkeydown = this.onKeyDownHandler;\n  }\n\n  onKeyDownHandler = (e) => {\n    switch (e.keyCode) {\n      case 8: // delete\n        var object = this.state.canvas.getActiveObject();\n        this.state.canvas.remove(object);\n    }\n    e.preventDefault(); \n  }\n\n  onClickAddImage = (e) => {\n    const reader = new FileReader()\n    const imageFile = e.target.files[0]\n    reader.readAsDataURL(imageFile)\n    reader.onloadend = () => {\n      fabric.Image.fromURL(reader.result, img => {\n        this.state.canvas.add(img);\n        this.state.canvas.requestRenderAll();\n      })\n    }\n  }\n  \n  onChangeApplyFilter = (filter) => {\n    var obj = this.state.canvas.getActiveObject();\n    if(obj){\n      switch(filter){\n        case 'hue': \n          obj.filters[0] = this.state.hueSet && new fabric.Image.filters.HueRotation({rotation: this.state.hueValue, isSet: true})\n          break;\n        case 'rgb':\n          const { r,g,b } = this.state\n          obj.filters[1] = this.state.rgbSet && new fabric.Image.filters.Gamma({gamma: [r,g,b], isSet: true})\n          break;\n        default:\n      }\n      obj.applyFilters()\n      this.state.canvas.requestRenderAll();\n    }\n  }\n\n  onChangeHandlerCheckBox = async (e, filter) => {\n    await this.setState({[e.target.name]: e.target.checked})\n    this.onChangeApplyFilter(filter)\n  }\n\n  onChangeHandlerRange = (e, filter) => {\n    this.setState({[e.target.name]: e.target.value})\n    this.onChangeApplyFilter(filter)\n  }\n\n  render = () => {\n    const { hueSet, hueValue, rgbSet, r, g, b } = this.state\n    return (\n      <div className=\"App\">\n        <canvas className=\"image-editor\" id=\"canvas\"></canvas>\n        <div className=\"editor\">\n          <input className=\"outline-primary\" type=\"file\" accept=\"image/*\" onChange={this.onClickAddImage}/>\n          {this.state.hasSelect ? \n            <>\n            <div className=\"hue-editor\">\n              <div>\n                <label className=\"mr-2\">ปรับค่า hue :</label>\n                <input name=\"hueSet\" type=\"checkbox\" checked={hueSet} onChange={(e) => this.onChangeHandlerCheckBox(e, 'hue')}/>\n              </div>\n              <div className=\"d-flex\">\n                <span className=\"mr-2\">ระดับ :</span>\n                <input name=\"hueValue\" style={{\"width\": \"80%\"}} value={hueValue} type=\"range\" min=\"-2\" max=\"2\" step=\"0.002\" onChange={(e) => this.onChangeHandlerRange(e, 'hue')}/>\n              </div>\n            </div>\n            <div className=\"hue-editor\">\n              <div>\n                <label className=\"mr-2\">ระดับค่า gamma :</label>\n                <input name=\"rgbSet\" type=\"checkbox\" checked={rgbSet} onChange={(e) => this.onChangeHandlerCheckBox(e, 'rgb')}/>\n              </div>\n              <div className=\"d-flex\">\n                <span className=\"mr-2\">R :</span>\n                <input name=\"r\" style={{\"width\": \"80%\"}} value={r} type=\"range\" min=\"0.2\" max=\"2.2\" step=\"0.003921\" onChange={(e) => this.onChangeHandlerRange(e, 'rgb')}/>\n              </div>\n              <div className=\"d-flex\">\n                <span className=\"mr-2\">G :</span>\n                <input name=\"g\" style={{\"width\": \"80%\"}} value={g} type=\"range\" min=\"0.2\" max=\"2.2\" step=\"0.003921\" onChange={(e) => this.onChangeHandlerRange(e, 'rgb')}/>\n              </div>\n              <div className=\"d-flex\">\n                <span className=\"mr-2\">B :</span>\n                <input name=\"b\" style={{\"width\": \"80%\"}} value={b} type=\"range\" min=\"0.2\" max=\"2.2\" step=\"0.003921\" onChange={(e) => this.onChangeHandlerRange(e, 'rgb')}/>\n              </div>\n            </div>\n          </>\n          :\n          <div className=\"p-3\">กรุณาเลือกภาพที่ต้องการเพื่อปรับแต่งสีภาพ</div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/srmppn/Desktop/umbrella-editor/src/index.js",[],{"ruleId":"18","severity":1,"message":"19","line":1,"column":8,"nodeType":"20","messageId":"21","endLine":1,"endColumn":12},{"ruleId":"18","severity":1,"message":"22","line":5,"column":10,"nodeType":"20","messageId":"21","endLine":5,"endColumn":16},{"ruleId":"23","severity":1,"message":"24","line":48,"column":5,"nodeType":"25","messageId":"26","endLine":52,"endColumn":6},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]